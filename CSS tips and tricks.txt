/* - Font sizes (px)
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

- Spacing system (px)
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128 */

* STEPS ON HIDING ELEMENTS
/* 1) Hide it visually */
opacity: 0;

/* 2) Make it unaccessible to mouse and keyboard */
pointer-events: none;

/* 3) Hide it from screen readers */
visibility: hidden;

/* Only works if there is nothing absolutely positioned
  in relation to body */
  overflow-x: hidden;

* using transform to actually move the absolutely
  positioned elements has a smoother animation than
  the properties of absolute elements (top, right, etc.)

RESPONSIVENESS
/**************************************/
/* BELOW 1344px (Smaller desktops) */
/**************************************/
/**************************************/
/* BELOW 1200px (Landscape Tablets) */
/**************************************/
/**************************************/
/* BELOW 944px (Tablets) */
/**************************************/
/**************************************/
/* BELOW 704px (Smaller Tablets) */
/**************************************/
/**************************************/
/* BELOW 544px (Phones) */
/**************************************/

* generally, phones are at a range of 350px - 450px

* transform: translate works with everything, not just
  positioned absolute elements


Site that is good:
https://github.com/jensimmons/cssremedy
https://every-layout.dev/

- flexbox Gap hack for browsers that do not support flexbox
  Gap
--
function checkFlexGap() {
  var flex = document.createElement("div");
  flex.style.display = "flex";
  flex.style.flexDirection = "column";
  flex.style.rowGap = "1px";

  flex.appendChild(document.createElement("div"));
  flex.appendChild(document.createElement("div"));

  document.body.appendChild(flex);
  var isSupported = flex.scrollHeight === 1;
  flex.parentNode.removeChild(flex);
  console.log(isSupported);

  if (!isSupported) document.body.classList.add("no-flexbox-gap");
}
checkFlexGap();

/*
.no-flexbox-gap .main-nav-list li:not(:last-child) {
  margin-right: 4.8rem;
}

.no-flexbox-gap .list-item:not(:last-child) {
  margin-bottom: 1.6rem;
}

.no-flexbox-gap .list-icon:not(:last-child) {
  margin-right: 1.6rem;
}

.no-flexbox-gap .delivered-faces {
  margin-right: 1.6rem;
}

.no-flexbox-gap .meal-attribute:not(:last-child) {
  margin-bottom: 2rem;
}

.no-flexbox-gap .meal-icon {
  margin-right: 1.6rem;
}

.no-flexbox-gap .footer-row div:not(:last-child) {
  margin-right: 6.4rem;
}

.no-flexbox-gap .social-links li:not(:last-child) {
  margin-right: 2.4rem;
}

.no-flexbox-gap .footer-nav li:not(:last-child) {
  margin-bottom: 2.4rem;
}

@media (max-width: 75em) {
  .no-flexbox-gap .main-nav-list li:not(:last-child) {
    margin-right: 3.2rem;
  }
}

@media (max-width: 59em) {
  .no-flexbox-gap .main-nav-list li:not(:last-child) {
    margin-right: 0;
    margin-bottom: 4.8rem;
  }
}
*/


- make parent element change if child is hovered
-- https://stackoverflow.com/questions/8114657/how-to-style-the-parent-element-when-hovering-a-child-element